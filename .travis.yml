stages:
  - name: setup
    language: python
    sudo: false
    cache: pip
    env:
      global:
      - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
      - SEGFAULT_SIGNALS=all
      matrix:
      - TOXENV=check
      - TOXENV=docs
    matrix:
      include:
      - python: '3.4'
        env:
        - TOXENV=py34,report,codecov
      - python: '3.5'
        env:
        - TOXENV=py35,report,codecov
      - python: '3.6'
        env:
        - TOXENV=py36,report,codecov
      - python: '3.7'
        dist: xenial
        sudo: required
        env:
        - TOXENV=py37,report,codecov
      - python: pypy3
        env:
        - TOXENV=pypy3,report,codecov
    before_install:
    - python --version
    - uname -a
    - lsb_release -a
    install:
    - pip install tox
    - virtualenv --version
    - easy_install --version
    - pip --version
    - tox --version
    - |
      set -ex
      if [[ $TRAVIS_PYTHON_VERSION == 'pypy' ]]; then
          (cd $HOME
           wget https://bitbucket.org/pypy/pypy/downloads/pypy2-v6.0.0-linux64.tar.bz2
           tar xf pypy2-*.tar.bz2
           pypy2-*/bin/pypy -m ensurepip
           pypy2-*/bin/pypy -m pip install -U virtualenv)
          export PATH=$(echo $HOME/pypy2-*/bin):$PATH
          export TOXPYTHON=$(echo $HOME/pypy2-*/bin/pypy)
      fi
      if [[ $TRAVIS_PYTHON_VERSION == 'pypy3' ]]; then
          (cd $HOME
           wget https://bitbucket.org/pypy/pypy/downloads/pypy3-v6.0.0-linux64.tar.bz2
           tar xf pypy3-*.tar.bz2
           pypy3-*/bin/pypy3 -m ensurepip
           pypy3-*/bin/pypy3 -m pip install -U virtualenv)
          export PATH=$(echo $HOME/pypy3-*/bin):$PATH
          export TOXPYTHON=$(echo $HOME/pypy3-*/bin/pypy3)
      fi
      set +x
    script:
    - tox -v
    after_failure:
    - more .tox/log/* | cat
    - more .tox/*/log/* | cat
  - name: deployment
    deploy:
      provider: pypi
      user: bbarney213
      password:
        secure: VaUHXJYBtXPbTJfTtutltNbowtegxugl4djEeiDqfEIytIFOwusbCEhG0/KOMpdXCRXreqIZ+jXYJQ4I7ySVdkq97MiP/WM3Sjj9TFgk3NAHDtccWMVjLDdPn5BIyppt73K3oiiQCu8KIj+MwhGu+aMBzE0euZATF1cW3EJgdDt+6BexOC6Bv1HQtY/fL14dZL7P5cungfcv0oLbsLGtNJbMCN42ExPgBwKVr3jSJIEs9jD/zuOa6TquQQGw2kz/JKmAgCLdXLUcx6EWQBcrpaBJznQ/Dqlzc8/Xp0gCmmYgHyjDbngeNg8O+xXpP5yUGoj69+sdz6Bxo+GcQ/jndpowJV+LJqk6U6LYn/Ifc496Jn8nOHxUgr7iVQWWW+fGny/HKVJcqqpetuXI2M9YyR+LEnfzDddDlEtuFAOIJU8/ra6HkPxw3SYe5q5lHybOMivnQLa2L25kk5/AV0iVUV/l5wriDkC8LdIgOkgqpdu2MFKLJxlpwr80xvOqMX4ubc3WwkiBCSnNthmdGyGGGrUkpVzvBtFMZZizEO0iSXlnByzJlYizgNKl5E476BjaXafCfZ3q1GKq6EPsUCq6U5LBalcIw3CiMY0qyvqY+48czZMc5I7HozpMYlHtY1hC82uiUTsh8U/Axhzbeo+K+UvkbSxYM/UpbddmsEhlMVU=
      on:
        tags: true
notifications:
  email:
    on_success: never
    on_failure: always
